設計書　～地図機能を使えるようにする～

〇目的
　・地図機能を用いたアプリケーションの開発をしたい（これ入れればプロジェクト実験としての目標は達成できるのかな？？）
　・現在は、データベース上で緯度と経度の情報を保存し掲示板に一緒に載せているが、緯度と経度の情報だけではどこの場所なのか
　　などわかりにくいという問題点がある。
　　⇒地図機能を用いることで、どこでメッセージが送信されたのかをより視覚的にわかり安くすることができる。

〇仕様（初期段階）
　1,アプリに新しく地図専用のページを作成する。
　2,データベースに存在する緯度と経度の情報を読み取り、地図上のその場所にピンを打つ。
　3,ピンをタッチするとその緯度と経度で送信されたメッセージを表示させる。

〇懸念点
　・使用する地図に関して
　　使用する地図は以下の条件を満たしていることが求められる
　　(ⅰ)オフラインでも使用することが可能な地図
　　(ⅱ)無償で利用することが可能な地図
　　(ⅲ)商標利用可能な地図
　　(ⅳ)デザインをこちら側で変更できるような地図
　　～地図の候補～
　　・OSMDroid
    　-特徴-
    　・無償で使用することができる
    　・商用利用可能
    　・Markerクラスなどを用いてデザインの変更が可能
    　・事前に地図をダウンロードしておくことで、オフラインでの使用が可能

　　・Mapbox
    　-特徴-
    　・高機能でデザインが豊富
    　・高精度なピン設定とカスタマイズ
    　・事前に地図をダウンロードしておくことで、オフラインでの使用が可能
    　・商用利用の制約が厳しい
    　・ある程度の機能を超えると課金しなければならない

    ・GoogleMap
    　-特徴-
      ・オフラインでの機能は限定的で完全なオフラインサポートを提供するのは難しい
      ・商用利用や大量のアクセスが発生する場合料金が発生する場合がある。
      ・AndroidStudioで利用するのには準備の手間が少なく簡単に利用することができる。

    ⇒特徴の観点からOSMDroidを使用したいと思う。

　・OSMDroidのオフライン利用について
　　OSMDroidはオンラインでもオフラインでも使用することが可能であるが、オフラインで利用するためにはあらかじめ地図を
　　ダウンロードしておく必要がある。
　　-ダウンロード方法-
　　(ⅰ)各ユーザが必要な範囲のエリアを個人でダウンロードする方法
　　　　・メリット
　　　　　・個人が必要なデータをダウンロードしておくからデバイスのストレージを節約することができる。
　　　　　・アプリの利用エリアが広い場合、ユーザーごとにダウンロード地域をカスタマイズでき、
　　　　　　全世界対応のアプリでも対応がしやすい。
　　　　・デメリット
　　　　　・ユーザーがダウンロード範囲を選ぶ必要があり、操作が増えて面倒に感じる場合もある。
　　　　　・ユーザーがどの範囲をダウンロードしたかの管理が必要になり、範囲が不足している場合のアラートや
　　　　　　再ダウンロード処理などの機能も必要になる。
　　(ⅱ)開発の時点でアプリ作成者が特定の都市や国のマップをダウンロードしておく
　　　　・メリット　　
　　　　　・ユーザーはダウンロード作業が不要で、インストール後すぐに利用可能。操作性がシンプルになる。
　　　　　・あらかじめ決めた範囲の地図が確実に含まれているので、オフラインでも途切れなく表示される。
　　　　・デメリット　　
　　　　　・ダウンロードした範囲が広い場合、ユーザーのデバイスに多くのストレージを使用する。
　　　　　・開発者が指定した範囲以外の地図がオフラインで見られないため、利用エリアが限られる。
　　　　　・日本全土の地図を取り込もうとする場合5GB以上のストレージが必要になるかも？
　　(ⅲ)ユーザがアプリを起動した位置情報を読み取り、その周辺の地図を自動でダウンロードしておく。
　　　　OSMDroidでは、MapTileProviderBasic と MapTileDownloader を使用することで、指定された
　　　　範囲（緯度・経度と半径）を自動的にダウンロード可能
　　　　ダウンロードしたタイルはキャッシュディレクトリに保存され、オフラインでの表示が可能
　　　　・メリット　
　　　　　・必要な範囲だけを効率的にダウンロードでき、ストレージの無駄遣いを避けられる。
　　　　　・移動に応じて自動で新しいエリアを追加し、常に最新の地図範囲を持続できる。
　　　　・デメリット　　
　　　　　・ユーザーが長距離を短時間で移動する場合、頻繁なダウンロードが発生する可能性があるため、
　　　　　　ダウンロードの頻度と通信量を適切に管理する必要がある。
　　　　　・アプリを起動したときに既にオフライン状態であった時は地図のダウンロードができないため、
　　　　　　地図機能を利用できなくなってしまう。
　　　　　　⇒解決案
　　　　　　　・アプリを初めてインストールしたときに、指定範囲の地図データを一括ダウンロードして保存しておく。
　　　　　　　・アプリ起動中やバックグランドにしている時に、周辺の地図情報を自動でダウンロードしておく。

    ⇒提案手法：・地図を保存できるスペースを5つくらい用意する。地図1から地図4まではユーザが任意で必要な場所の地図を
    　　　　　　　ダウンロードできるようにする。（自宅周辺、職場周辺、今度行く旅行先など）
    　　　　　　・地図5はオンライン時に現在のGPSから半径Hkmの地図を自動ダウンロードして保存するようにしておく
    　　　　　　　（こうすることで、地図1から4にいなかった場合でも地図機能を利用できるようになる。）
    　　　　　　・地図5に保存した範囲から出そうになった時自動で地図を更新する。
　　　　　
〇まとめ・必要なもの、機能
　～概要～
　・地図の範囲内で送信されたメッセージがデータベース上に存在する場合にピンを指す。
　・ピンを押すとそこでのメッセージを表示する。

　～必要なUI関連～
　・地図を表示するためのページ
　　　各地図のピンを表示し、ピンをタップで詳細を確認できる。
　・地図の設定ページ
　　　各地図の管理を行うページ。
　　　地図1～4はユーザーが任意の位置情報を設定できるようにし、現在位置や場所を指定してダウンロード。
　　　地図5は自動ダウンロード用にして、ユーザーによる設定ができないようにする。
　　　ダウンロードした地図を削除・管理するための機能を追加。
　～詳細な仕様～
　　ー複数の地図ダウンロード設定（地図1～5）ー
　　　　・地図1～4：ユーザーが手動で設定
　　　　　　設定ページで地図1～4の範囲や場所をユーザーが任意に設定可能。
　　　　　　任意の位置情報を指定して範囲をダウンロード。
　　　　　　「地図の管理」画面から、必要に応じて削除も可能。
　　　　・地図5：緊急時用の自動ダウンロード枠
　　　　　　オンライン時に現在位置と適切な距離hの範囲を自動ダウンロードして地図5に保存。
　　　　　　地図5内の範囲からはみ出すと、新しい位置を中心に追加ダウンロードして更新する。
　　　　　　地図5はあくまで緊急用の一時保存なので、次回オンラインで起動したときに、内容が必要に応じて更新される。

　　ーオンライン時ー
　　　　・現在位置取得
　　　　　　起動時に現在位置を取得。
　　　　・自動ダウンロード
　　　　　　取得した位置情報からh kmの範囲をダウンロードして、地図5に自動保存。
　　　　・移動検出と追加ダウンロード
　　　　　　現在位置が地図5の範囲から外れそうな場合は、自動で地図5を追加ダウンロードして更新。

　　ーオフライン時ー
　　　　・事前ダウンロードした地図を活用
　　　　　　地図1～4、または地図5に保存されている範囲の地図をユーザーが選択して利用。
　　　　　　地図表示ページで、ダウンロード済みの地図のうち、現在位置または必要な場所のものを開いて確認できる。

〇実装手順(全体通して)
　1,AndroidStudioでOSMDroidを使えるようにする。
　　OSMDroidのライブラリをbuild.gradleに追加することで、アプリ内でOSMDroidの地図を表示するための機能は
　　使えるようになるが、オフラインで地図を使用するには事前に特定エリアの地図タイルをダウンロードしておく
　　必要がある。
　2,UIレイアウトの開発
　3,位置情報とdownload機能の実装
　4,ビンの表示と管理
　5,挙動の確認

〇オフライン実装における注意点、ポイント
1,ダウンロードの操作が複雑にならないように注意する。
　・範囲選択やデータ量の確認ができるようにする
　・範囲選択と県単位で地図をダウンロードできるといいかも？
2,ストレージを圧迫しすぎないように注意する。
　・ズームサイズなどに注意する（実装終了してから調整したい）
3,OSMDroidではTileSourceをカスタマイズすることで、ダウンロード済みの地図を利用することが可能
　地図のデータフォーマットはMBTliesやZIP化されたタイルが一般的
　⇒それぞれの形式で何が異なるのか調べる！！
4,ダウンロード済みの地図の保存場所
　地図の保存場所を内部ストレージにするのか外部ストレージにするのかかんがえる。
　⇒内部ストレージ、外部ストレージについて調べる！！

〇実装手順(オフライン時)
1,UIレイアウトの開発　
  ・地図をダウンロードなどの設定ページの作成
  ・地図上に設定ページへの遷移ボタンを作成する。

2,地図をダウンロードできるようにする。（ユーザ側）
3,地図を自動ダウンロードできるようにする（アプリケーション側）
